stages:
  - test
  - build
  - deploy

variables:
  DOCKER_IMAGE: react-app:$CI_COMMIT_SHORT_SHA

test_connection:
  stage: test
  image: alpine:latest
  before_script:
  - apk add --no-cache openssh-client bash
  - eval $(ssh-agent -s)
  - ssh-add "$SSH_PRIVATE_KEY"
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

  script:
    - echo "Тестируем SSH подключение..."
    - ssh -o ConnectTimeout=10 $SERVER_USER@$SERVER_IP "echo 'SSH подключение работает!'"
    - echo "Тестируем SCP..."
    - echo "test file" > test.txt
    - scp -o ConnectTimeout=10 test.txt $SERVER_USER@$SERVER_IP:/tmp/test.txt
    - echo "SCP работает!"
  only:
    - master

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-cli
  script:
    - docker build -t $DOCKER_IMAGE .
    - docker save $DOCKER_IMAGE > react-app.tar
  artifacts:
    paths:
      - react-app.tar
  only:
    - master

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
  - apk add --no-cache openssh-client bash
  - eval $(ssh-agent -s)
  - ssh-add "$SSH_PRIVATE_KEY"
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

  script:
    - scp react-app.tar $SERVER_USER@$SERVER_IP:/tmp/react-app.tar
    - scp docker-compose.yml $SERVER_USER@$SERVER_IP:/app/react-app/docker-compose.yml
    - ssh $SERVER_USER@$SERVER_IP "
      docker load -i /tmp/react-app.tar &&
      cd /app/react-app &&
      docker-compose down &&
      docker-compose up -d
      "
  only:
    - master
