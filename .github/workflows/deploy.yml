name: Deploy to Server

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t react-app:latest .
        docker save react-app:latest > react-app.tar

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-files
        path: |
          react-app.tar
          docker-compose.yml
          Dockerfile
          nginx.conf

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: app-files

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_key
        chmod 600 ~/.ssh/private_key
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Create project directory
      run: |
        ssh -i ~/.ssh/private_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p /root/react-app"

    - name: Copy files to server
      run: |
        scp -i ~/.ssh/private_key react-app.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/tmp/react-app.tar
        scp -i ~/.ssh/private_key docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/root/react-app/docker-compose.yml
        scp -i ~/.ssh/private_key Dockerfile ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/root/react-app/Dockerfile
        scp -i ~/.ssh/private_key nginx.conf ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/root/react-app/nginx.conf

    - name: Deploy on server
      run: |
        ssh -i ~/.ssh/private_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          docker load -i /tmp/react-app.tar &&
          cd /root/react-app &&
          docker-compose down &&
          docker-compose up -d
        "